[project]
name = "fast-zero"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Sandenberg Ferreira Melo", email = "77549672+sandenbergmelo@users.noreply.github.com" },
]

requires-python = ">=3.12,<4.0"

dependencies = [
    "aiosqlite>=0.21.0",
    "alembic>=1.16.1",
    "fastapi[standard]>=0.115.12",
    "freezegun>=1.5.2",
    "pwdlib[argon2]>=0.2.1",
    "pydantic-settings>=2.9.1",
    "pyjwt>=2.10.1",
    "sqlalchemy[asyncio]>=2.0.41",
    "tzdata>=2025.2",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.10",
    "taskipy>=1.14.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT', 'FAST']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = ['.']
addopts = '-p no:warnings'
asyncio_default_fixture_loop_scope = 'function'

[tool.coverage.run]
concurrency = ["thread", "greenlet"]

[tool.taskipy.tasks]
dev = 'fastapi dev src/fast_zero/app.py'
run = 'fastapi run src/fast_zero/app.py'

lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'

pre_test = 'task lint'
test = 'pytest -s -x --cov=src -vv'
post_test = 'coverage html'

clean = 'rm -rf .pytest_cache .ruff_cache .coverage htmlcov'

migrate_upgrade = 'alembic upgrade head'
migrate_generate = 'alembic revision --autogenerate -m'
migrate = 'task migrate_generate'
post_migrate = 'task migrate_upgrade'
